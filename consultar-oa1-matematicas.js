const { supabase } = require('./server/database/supabase');
const logger = require('./server/utils/logger');

async function consultarOA1Matematicas() {
  try {
    logger.info('üîç Consultando informaci√≥n del OA1 de Matem√°ticas 1¬∞ b√°sico...');

    // Consultar el OA1 espec√≠fico
    const { data: oa1, error: oaError } = await supabase
      .from('learning_objective')
      .select('*')
      .eq('oa_code', 'MA01OA01')
      .single();

    if (oaError) {
      logger.error('‚ùå Error al consultar OA1:', oaError.message);
      throw oaError;
    }

    logger.info('‚úÖ Informaci√≥n del OA1 encontrada:');
    logger.info(`üìã C√≥digo: ${oa1.oa_code}`);
    logger.info(`üìù Descripci√≥n: ${oa1.oa_desc}`);
    logger.info(`üéØ Nivel Bloom: ${oa1.bloom_level}`);
    logger.info(`üß† Habilidad Cognitiva: ${oa1.cog_skill}`);
    logger.info(`üìö Grado: ${oa1.grade_code}`);
    logger.info(`üìñ Asignatura: ${oa1.subject_code}`);
    logger.info(`‚è±Ô∏è Horas Estimadas: ${oa1.estimated_hours}`);
    logger.info(`üìä Nivel de Complejidad: ${oa1.complexity_level}`);
    logger.info(`üéØ Prioridad Ministerial: ${oa1.ministerial_priority}`);
    logger.info(`üîÑ Transversal: ${oa1.is_transversal}`);

    // Consultar todos los OA de Matem√°ticas 1¬∞ b√°sico para contexto
    const { data: oasMatematicas, error: oasError } = await supabase
      .from('learning_objective')
      .select('oa_code, oa_desc, bloom_level, complexity_level')
      .eq('subject_code', 'MAT')
      .eq('grade_code', '1B')
      .order('oa_code');

    if (oasError) {
      logger.error('‚ùå Error al consultar OAs de Matem√°ticas:', oasError.message);
      throw oasError;
    }

    logger.info('\nüìö Contexto - Todos los OA de Matem√°ticas 1¬∞ b√°sico:');
    oasMatematicas.forEach((oa, index) => {
      logger.info(`${index + 1}. ${oa.oa_code}: ${oa.oa_desc.substring(0, 80)}...`);
      logger.info(`   Bloom: ${oa.bloom_level} | Complejidad: ${oa.complexity_level}`);
    });

    // Consultar experiencias existentes relacionadas con MA01OA01
    const { data: experiencias, error: expError } = await supabase
      .from('game_engines')
      .select('engine_id, engine_name, oa_codes, difficulty_level, estimated_duration')
      .contains('oa_codes', ['MA01OA01']);

    if (expError) {
      logger.warn('‚ö†Ô∏è No se pudieron consultar experiencias existentes:', expError.message);
    } else {
      logger.info('\nüéÆ Experiencias existentes relacionadas con MA01OA01:');
      if (experiencias && experiencias.length > 0) {
        experiencias.forEach((exp, index) => {
          logger.info(`${index + 1}. ${exp.engine_name}`);
          logger.info(`   ID: ${exp.engine_id} | Dificultad: ${exp.difficulty_level} | Duraci√≥n: ${exp.estimated_duration} min`);
        });
      } else {
        logger.info('   No hay experiencias existentes para este OA');
      }
    }

    // An√°lisis para el plan de implementaci√≥n
    logger.info('\nüéØ AN√ÅLISIS PARA PLAN DE IMPLEMENTACI√ìN:');
    logger.info('==========================================');
    
    // 1. Objetivos espec√≠ficos de aprendizaje
    logger.info('\nüìã 1. OBJETIVOS ESPEC√çFICOS DE APRENDIZAJE:');
    logger.info(`   ‚Ä¢ Contar n√∫meros del 0 al 100`);
    logger.info(`   ‚Ä¢ Progresiones: de 1 en 1, de 2 en 2, de 5 en 5, de 10 en 10`);
    logger.info(`   ‚Ä¢ Direcci√≥n: hacia adelante y hacia atr√°s`);
    logger.info(`   ‚Ä¢ Punto de partida: cualquier n√∫mero menor que 100`);

    // 2. Indicadores de evaluaci√≥n
    logger.info('\nüìä 2. INDICADORES DE EVALUACI√ìN:');
    logger.info(`   ‚Ä¢ Nivel Bloom: ${oa1.bloom_level} (Recordar)`);
    logger.info(`   ‚Ä¢ Habilidad Cognitiva: ${oa1.cog_skill} (mantener)`);
    logger.info(`   ‚Ä¢ Nivel de Complejidad: ${oa1.complexity_level}/5`);
    logger.info(`   ‚Ä¢ Horas Estimadas: ${oa1.estimated_hours} horas`);

    // 3. Habilidades que debe desarrollar
    logger.info('\nüß† 3. HABILIDADES A DESARROLLAR:');
    logger.info(`   ‚Ä¢ Secuenciaci√≥n num√©rica`);
    logger.info(`   ‚Ä¢ Patrones de conteo`);
    logger.info(`   ‚Ä¢ Flexibilidad mental (hacia adelante/atr√°s)`);
    logger.info(`   ‚Ä¢ Memoria de secuencias`);
    logger.info(`   ‚Ä¢ Reconocimiento de patrones`);

    // 4. Contenidos espec√≠ficos
    logger.info('\nüìö 4. CONTENIDOS ESPEC√çFICOS:');
    logger.info(`   ‚Ä¢ N√∫meros del 0 al 100`);
    logger.info(`   ‚Ä¢ Progresiones aritm√©ticas`);
    logger.info(`   ‚Ä¢ Conteo regresivo`);
    logger.info(`   ‚Ä¢ Patrones num√©ricos`);

    // 5. Relaci√≥n con otros OAs
    logger.info('\nüîó 5. RELACI√ìN CON OTROS OAs:');
    const oasRelacionados = oasMatematicas.filter(oa => 
      oa.oa_code !== 'MA01OA01' && 
      (oa.oa_code.includes('OA02') || oa.oa_code.includes('OA03'))
    );
    oasRelacionados.forEach(oa => {
      logger.info(`   ‚Ä¢ ${oa.oa_code}: ${oa.oa_desc.substring(0, 60)}...`);
    });

    // 6. Recomendaciones para las 6 experiencias
    logger.info('\nüéÆ 6. RECOMENDACIONES PARA LAS 6 EXPERIENCIAS:');
    logger.info('   Experiencia 1 (Discovery Learning):');
    logger.info('   ‚Ä¢ Exploraci√≥n libre de secuencias num√©ricas');
    logger.info('   ‚Ä¢ Descubrimiento de patrones de conteo');
    
    logger.info('   Experiencia 2 (Project-Based Learning):');
    logger.info('   ‚Ä¢ Proyecto: "Construir una escalera num√©rica"');
    logger.info('   ‚Ä¢ Colaboraci√≥n para crear secuencias');
    
    logger.info('   Experiencia 3 (Multi-Device Interactive):');
    logger.info('   ‚Ä¢ Gestos para contar en diferentes dispositivos');
    logger.info('   ‚Ä¢ Interacci√≥n t√°ctil con n√∫meros');
    
    logger.info('   Experiencia 4 (Adaptive Learning):');
    logger.info('   ‚Ä¢ Adaptaci√≥n autom√°tica de dificultad');
    logger.info('   ‚Ä¢ Personalizaci√≥n de secuencias');
    
    logger.info('   Experiencia 5 (Inquiry-Based Learning):');
    logger.info('   ‚Ä¢ Investigaci√≥n de patrones num√©ricos');
    logger.info('   ‚Ä¢ Formulaci√≥n de hip√≥tesis sobre secuencias');
    
    logger.info('   Experiencia 6 (Collaborative Learning):');
    logger.info('   ‚Ä¢ Trabajo en equipo para contar');
    logger.info('   ‚Ä¢ Construcci√≥n colectiva de secuencias');

    logger.info('\n‚úÖ Consulta completada exitosamente');
    return oa1;

  } catch (error) {
    logger.error('üö® Error en la consulta:', error.message);
    throw error;
  }
}

// Ejecutar la consulta
consultarOA1Matematicas(); 