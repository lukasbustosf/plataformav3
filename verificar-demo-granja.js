#!/usr/bin/env node

const axios = require('axios');

async function verificarDemoGranja() {
  console.log('üîç VERIFICANDO DEMO GRANJA EXISTENTE');
  console.log('=' .repeat(50));

  try {
    // Obtener datos del demo de granja
    const response = await axios.get('http://localhost:5000/api/game/demo-001', {
      headers: { 'Authorization': 'Bearer demo_token' }
    });

    const session = response.data.session;
    
    console.log('\nüìä DATOS DEL DEMO:');
    console.log(`T√≠tulo: "${session.title}"`);
    console.log(`Engine ID: ${session.engine_id}`);
    console.log(`Formato: ${session.format}`);
    console.log(`Settings:`, JSON.stringify(session.settings_json, null, 2));
    
    // Aplicar l√≥gica de detecci√≥n exacta del frontend
    const titleContainsGranja = session.title?.toLowerCase().includes('granja');
    const titleContainsFarm = session.title?.toLowerCase().includes('farm');
    const farmThemeTrue = session.settings_json?.farm_theme === true;
    const grade1B = session.settings_json?.grade_level === '1B';
    
    console.log('\nüé® AN√ÅLISIS DE DETECCI√ìN:');
    console.log(`‚úÖ T√≠tulo contiene 'granja': ${titleContainsGranja}`);
    console.log(`‚úÖ T√≠tulo contiene 'farm': ${titleContainsFarm}`);
    console.log(`‚úÖ farm_theme === true: ${farmThemeTrue}`);
    console.log(`‚úÖ grade_level === '1B': ${grade1B}`);
    
    const shouldUseFarmTheme = titleContainsGranja || titleContainsFarm || farmThemeTrue || grade1B;
    
    console.log(`\nüéØ RESULTADO:`);
    console.log(`Deber√≠a usar FarmCountingGame: ${shouldUseFarmTheme ? '‚úÖ S√ç' : '‚ùå NO'}`);
    console.log(`Componente esperado: ${shouldUseFarmTheme ? 'FarmCountingGame' : 'NumberLineRace'}`);
    
    if (shouldUseFarmTheme) {
      console.log('\nüéâ ¬°EL DEMO DEBER√çA ACTIVAR FARMCOUNTINGGAME!');
      console.log('Si no lo ves, el problema est√° en el frontend');
    } else {
      console.log('\n‚ö†Ô∏è El demo NO cumple criterios para FarmCountingGame');
      console.log('Necesitamos arreglar la configuraci√≥n del demo');
    }
    
    // Mostrar preguntas del demo
    if (session.quizzes?.questions) {
      console.log('\nüìù PREGUNTAS DEL DEMO:');
      session.quizzes.questions.slice(0, 3).forEach((q, i) => {
        console.log(`Q${i+1}: "${q.stem_md || q.text}"`);
      });
    }
    
    console.log(`\nüåê URL para probar: http://localhost:3000/student/games/demo-001/play`);
    
    return { session, shouldUseFarmTheme };

  } catch (error) {
    console.error('‚ùå Error:', error.message);
    if (error.response) {
      console.error('Response data:', error.response.data);
    }
    return null;
  }
}

// Ejecutar
verificarDemoGranja().then(result => {
  if (result) {
    console.log('\n' + '='.repeat(50));
    if (result.shouldUseFarmTheme) {
      console.log('‚úÖ El demo DEBER√çA mostrar FarmCountingGame');
      console.log('Si ves NumberLineRace, hay problema en el frontend');
    } else {
      console.log('‚ùå El demo NO activar√° FarmCountingGame');
      console.log('Necesitamos configurar farm_theme: true o grade_level: "1B"');
    }
  }
}); 